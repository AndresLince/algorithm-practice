Exercises
1.1-1
A real world example that requeres sorting is orderin school students on the
basis of marks and grades.

1.1-2
Other than speed, the other measures of efficiency that one use in a real-world
setting are:
Memory usage
Cache locality
Disk seeks
Bandwidth

1.1-3
Advantages Of Linked List:
Dynamic data structure: A linked list is a dynamic arrangement so it can grow
and shrink at runtime by allocating and deallocating memory. So there is no
need to give the initial size of the linked list.
No memory wastage: In the Linked list, efficient memory utilization can be
achieved since the size of the linked list increase or decrease at run time so
there is no memory wastage and there is no need to pre-allocate the memory.
Implementation: Linear data structures like stacks and queues are often easily
implemented using a linked list.
Insertion and Deletion Operations: Insertion and deletion operations are quite
easier in the linked list. There is no need to shift elements after the
insertion or deletion of an element only the address present in the next
pointer needs to be updated.

Disadvantages Of Linked List:

Memory usage: More memory is required in the linked list as compared to an
array. Because in a linked list, a pointer is also required to store the
address of the next element and it requires extra memory for itself.
Traversal: In a Linked list traversal is more time-consuming as compared to an
array. Direct access to an element is not possible in a linked list as in an
array by index. For example, for accessing a node at position n, one has to
traverse all the nodes before it.
Reverse Traversing: In a singly linked list reverse traversing is not possible,
but in the case of a doubly-linked list, it can be possible as it contains a
pointer to the previously connected nodes with each node. For performing this
extra memory is required for the back pointer hence, there is a wastage of
memory.
Random Access: Random access is not possible in a linked list due to its
dynamic memory allocation.

1.1-4
The shortest path problem involves finding the shortest path between two
vertices (or nodes) in a graph. Algorithms such as the Floyd-Warshall algorithm
and different variations of Dijkstra's algorithm are used to find solutions to
the shortest path problem. Applications of the shortest path problem include
those in road networks, logistics, communications, electronic design, power
grid contingency analysis, and community detection.

The traveling salesman problem (TSP) is an algorithmic problem tasked with
finding the shortest route between a set of points and locations that must be
visited. In the problem statement, the points are the cities a salesperson
might visit.

They are similar in that they both deal with a map and care about the distance
between points (cities and roads for example). Additionally, each problem seeks
to produce a route that minimizes distance.

They differ in that the shortest-path problem has a defined beginning point and
end point with no stipulations on which or how many points must be traversed
from beginning to end. The travelling salesman problem instead cares about
hitting every destination along the way while ending at the original beginning
point - this difference complicates the problem greatly.

1.1-5
Real worl problems:

Best solution: The problem to handle with the autonomous mix of components for
medicines should be the best

Good enough: The problem that shows the movement of a bus in real time to take
the bus needs to be good but not perfect.